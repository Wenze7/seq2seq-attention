{
    "score": [
        1.0
    ],
    "extracted": [
        0
    ],
    "abstract": [
        "rchain developer retreat roundup ."
    ],
    "id": "541282.train",
    "article": [
        "rchain developer retreat roundup the rchain development team is going to have a busy 2018 . attempting to solve major problems plaguing public programmable blockchains today -- high transaction fees , low transaction capacity , complexity of smart contract languages , and centralized points of integration between chains -- is no small task . following the first annual members meeting , developers huddled for a three days in salt lake city to crystallize initial release requirements , improve documentation coverage , and play with the rholang programming language . for those new to the project , the `` secret sauce '' behind rchain is concurrency calculus and type theory -- topics the team is pretty familiar with . ",
        "i hope to get around to writing a primer that should help bring people up to speed fairly soon . stay tuned . this is the first post in a series attempting to summarize the retreat sessions . all sessions were recorded and available on the rchain youtube channel . the retreat was kicked off with a dive into the technology stack that gets rchain to mercury , the initial release . a couple of things to highlight : rholang + system level contracts will be what node operators run and will provide the trusted decentralized computation platform . rholang is the language that rchain ` contracts ' will be written in . ",
        "it is a language built on concurrency . at its core , rholang is nothing more than syntactic sugar on top of the rho calculus . rho calculus is a reflective , higher-order variant of milner 's asynchronous , polyadic pi calculus . rosette , the language of atm networks , will serve as an intermediary between the rholang concurrency model and runnable machine language . rosette is a language created to run applications built on the actor model of concurrency . the rosette vm is written in c++ and is being ported to scala by the rchain development team . ",
        "rchain architecture to mercury rholang processes can be constructed from a strict , recursive type definition . a rholang process , p , is parametric in the notion of channel . lines 1 -- 4 are constructions that come from the pi calculus . lines 5 & 6 are the rho calculus extensions and make equalities like rp = p possible . in the rho calculus , channels are quoted processes . p = 0 indicates the stopped process . our value , the process that does nothing . a process that is waiting for input . when all the y 's receive input on the specified channels , the process continues . ",
        "a process that is waiting to communicate out on channel x . when this communication happens , the process continues . this line is a parallel composition of processes . a wrapper from process to channel name . a pointer , reference or quoted process . a de-reference -- or way to unwrap a process from a channel . composition of a rholang processthis session was focused on how blockchain technology could be used to ensure that pharmaceuticals are making it to their endpoints without dilution or mislabeling . the claim is that small pharmaceutical distribution companies have an incentive to dilute expensive drugs in order to increase profit , and that this can be difficult to detect . ",
        "in 2001 , a us pharmacist was convicted for selling diluted chemotherapy drugs . the world health organization identifies counterfeit pharmaceuticals as posing a significant threat , especially to those in developing countries . by recording and tracking pharmaceuticals as they move through the supply chain with a trusted and decentralized system , insurance companies can cooperate to detect harmful mishandling . when thinking about what information will be in an rchain block and which blocks will need to be stored by nodes , the rchain dev team is looking to keep things as small as possible . transactions will be hashed and stored on blocks , and the hash will be recoverable with rules and generating criteria , keeping the size of blocks down . ",
        "this compression via rules and generating criteria is enabled by the strict types of rholang processes . the same kind of filtering or case class matching is happening in rchain namespaces . namespaces are only mentioned briefly in this session , but they are essentially the rchain notion of sharding . the cbc casper protocol provides economic finalization which can be harnessed to allow pruning of blocks and remove the need for nodes to store all blocks going back to genesis . blocks will also need to store data for justifications during the casper consensus cycle . rchain is planning to take a more nuanced approach to transaction costs than other major cryptocurrencies . ",
        "the transaction cost will be broken up into four resource categories : compute , network , memory , and storage . compute , network , and memory resource usage will be calculated when a contract is run and the phlogiston consumed will result in a reward for the resource owner at a specified phlogiston/token ratio . unlike ethereum where the gas price is always set and payed for by the initiator of a transaction , rchain is going to allow contract authors to specify and pay for authorized transactions . storage costs are a bit trickier . compute , network , and memory resources are all consumed immediately at the time a transaction is run . ",
        "storage , on the other hand , consumes resources over the course of the storage duration . in order to protect parties from price instability of compensation tokens during the duration of storage , an optional mechanism other than `` pricing at transaction time '' is proposed . planning to protect application developers and their users from the volatile prices of cryptocurrencies is a clear indicator that rchain is trying to build something meaningful , and is n't focused solely on profit .   "
    ]
}