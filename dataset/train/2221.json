{
    "score": [
        0.6
    ],
    "extracted": [
        1
    ],
    "abstract": [
        "how to create and run a macos vr app using unity : part 2 ."
    ],
    "id": "226773.train",
    "article": [
        "ever want to create a simple vr application to run on your htc vive on macos ? here 's how ! if you 've been eying the latest trends in game development you could n't possibly miss the recent hype around vr and ar applications . we 've also spoken at length about installing and running an htc vive vr headset on your mac running macos high sierra . with an egpu development kit offered by apple or with the newest imac pro running a powerful amd radeon vega gpu , you can create and then run vr applications directly on a connected htc vive vr headset . ",
        "here 's part2 on how to create and run a simple vr application on macos and htc vive ! take a look at part 1 to get you up to speed ! this tutorial was written following the video tutorial provided by vrgamedev so be certain to check out their channel ! how to make your handsto keep things simple , the `` hands '' in our application will be two simple spheres but will be able to use the trigger buttons on the htc vive controller to grab the cube . under hierarchy again , select create > 3d object > sphere . ",
        "select sphere . under transform , change the scale to x = 0.1 , y = 0.1 , and z = 0.1 . leave the position at x = 0 , y = 0 , and z = 0 . select sphere under hierarchy and rename it to lefthand . option-click lefthand and and select duplicate . rename the duplicate to ** righthand . select both lefthand and righthand . under sphere collider click the gear and remove component . how to copy some c# codesince learning c# or other programming languages is beyond the scope of this article , we can import code to tell our application what to do with the input controllers of the htc vive . ",
        "you can copy the code here into a simple text editor , save it as handgabbing . cs , and finally to merge it into your vr application . using system . collections ; using system . collections . generic ; using unityengine ; using unityengine . xr ; / / needs to be unityengine . vr in version before 2017.2 public class handgrabbing : monobehaviour -lcb- public string inputname ; public xrnode nodetype ; public vector3 objectgraboffset ; public float grabdistance = 0.1 f ; public string grabtag = `` grab '' ; public float throwmultiplier = 1.5 f ; private transform _ currentobject ; private vector3 _ lastframeposition ; / / use this for initializationvoid start / / update is called once per framevoid update -lcb- / / update hand position and rotationtransform . ",
        "localposition = inputtracking . getlocalposition ; transform . localrotation = inputtracking . getlocalrotation ; / / if we do n't have an active object in hand , look if there is one in proximityif -lcb- / / check for colliders in proximitycollider colliders = physics . overlapsphere ; if -lcb- / / if there are colliders , take the first one if we press the grab button and it has the tag for grabbingif -lrb- input . getaxis > = 0.01 f & & colliders . transform . comparetag -rrb- -lcb- / / set current object to the object we have picked up _ currentobject = colliders . ",
        "transform ; / / if there is no rigidbody to the grabbed object attached , add oneif -lrb- _ currentobject . getcomponent == null -rrb- / / set grab object to kinematic _ currentobject . getcomponent . iskinematic = true ; -rcb- -rcb- -rcb- else / / we have object in hand , update its position with the current hand position -lcb- _ currentobject . position = transform . position + objectgraboffset ; / / if we we release grab button , release current objectif -lrb- input . getaxis < 0.01 f -rrb- -rcb- / / save the current position for calculation of velocity in next frame _ lastframeposition = transform . ",
        "position ; -rcb- -rcb- how to correlate you hands with an input deviceon the top menu bar click edit > project settings > input . under inputmanager option-click horizontal . select duplicate array element . rename the new element to tiggerleft . set type to joystick axis . set the axis to 11th axis . option-click triggerleft . select duplicate array element . rename the new element to tiggerright . set the axis to 12th axis . option-click the blank space under assets . select import new asset . select the handgrabbing . cs file you downloaded previously . click import . ",
        "select both lefthand and righthand under hierarchy . drag and drop the handgrabbing . cs script onto the inspector window . select lefthand under hierarchy and change the input name to triggerleft . select left hand under node type . select righthand under hierarchy and change the input name to triggerright . select right hand under node type . how to make the cube interactivefinally , let 's apply interaction on the cube . select the cube under hierarchy . under inspector click the drop-down next to tag . select add tag . click the + . name the tag grab . ",
        "click cube avian under hierarchy . click tag . select grab . how to build and play your vr apponce everything is inlace , you can press the play button and run your vr app in realtime . press the play triangle . select a screen resolution that will run on the htc vive . click play ! . your steamvr application should start and you should now be able to use your application in vr . you can grab your cube and trow it some distance ! congratulations ! you 've created your first vr application ! . final thoughtsthis is merely a taste of how to create a vr application . ",
        "hopefully you 'll be tempted to make it a full meal . game engines like unity and unreal make it very approachable for new aspiring game developers to get their feet wet and start creating amazing vr games . so what are you waiting for ? ! tell us what you 'll be developing in vr on macos ?   "
    ]
}